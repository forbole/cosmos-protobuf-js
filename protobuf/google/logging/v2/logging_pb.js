/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

const jspb = require('google-protobuf');

const goog = jspb;
const global = Function('return this')();

const google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
const google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
const google_protobuf_field_mask_pb = require('google-protobuf/google/protobuf/field_mask_pb.js');
const google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
const google_api_client_pb = require('../../../google/api/client_pb.js');
const google_api_field_behavior_pb = require('../../../google/api/field_behavior_pb.js');
const google_api_monitored_resource_pb = require('../../api/monitored_resource_pb.js');
const google_api_resource_pb = require('../../../google/api/resource_pb.js');
const google_logging_v2_log_entry_pb = require('./log_entry_pb.js');
const google_logging_v2_logging_config_pb = require('../../../google/logging/v2/logging_config_pb.js');
const google_rpc_status_pb = require('../../rpc/status_pb.js');
const google_api_annotations_pb = require('../../../google/api/annotations_pb.js');

goog.exportSymbol('proto.google.logging.v2.DeleteLogRequest', null, global);
goog.exportSymbol('proto.google.logging.v2.ListLogEntriesRequest', null, global);
goog.exportSymbol('proto.google.logging.v2.ListLogEntriesResponse', null, global);
goog.exportSymbol('proto.google.logging.v2.ListLogsRequest', null, global);
goog.exportSymbol('proto.google.logging.v2.ListLogsResponse', null, global);
goog.exportSymbol('proto.google.logging.v2.ListMonitoredResourceDescriptorsRequest', null, global);
goog.exportSymbol('proto.google.logging.v2.ListMonitoredResourceDescriptorsResponse', null, global);
goog.exportSymbol('proto.google.logging.v2.TailLogEntriesRequest', null, global);
goog.exportSymbol('proto.google.logging.v2.TailLogEntriesResponse', null, global);
goog.exportSymbol('proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo', null, global);
goog.exportSymbol('proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo.Reason', null, global);
goog.exportSymbol('proto.google.logging.v2.WriteLogEntriesPartialErrors', null, global);
goog.exportSymbol('proto.google.logging.v2.WriteLogEntriesRequest', null, global);
goog.exportSymbol('proto.google.logging.v2.WriteLogEntriesResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.logging.v2.DeleteLogRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.logging.v2.DeleteLogRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.logging.v2.DeleteLogRequest.displayName = 'proto.google.logging.v2.DeleteLogRequest';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
  proto.google.logging.v2.DeleteLogRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.google.logging.v2.DeleteLogRequest.toObject(opt_includeInstance, this);
  };

  /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.logging.v2.DeleteLogRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
  proto.google.logging.v2.DeleteLogRequest.toObject = function (includeInstance, msg) {
    let f; const
      obj = {
        logName: jspb.Message.getFieldWithDefault(msg, 1, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.logging.v2.DeleteLogRequest}
 */
proto.google.logging.v2.DeleteLogRequest.deserializeBinary = function (bytes) {
  const reader = new jspb.BinaryReader(bytes);
  const msg = new proto.google.logging.v2.DeleteLogRequest();
  return proto.google.logging.v2.DeleteLogRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.logging.v2.DeleteLogRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.logging.v2.DeleteLogRequest}
 */
proto.google.logging.v2.DeleteLogRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    const field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setLogName(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.logging.v2.DeleteLogRequest.prototype.serializeBinary = function () {
  const writer = new jspb.BinaryWriter();
  proto.google.logging.v2.DeleteLogRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.logging.v2.DeleteLogRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.logging.v2.DeleteLogRequest.serializeBinaryToWriter = function (message, writer) {
  let f;
  f = message.getLogName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f,
    );
  }
};

/**
 * optional string log_name = 1;
 * @return {string}
 */
proto.google.logging.v2.DeleteLogRequest.prototype.getLogName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/** @param {string} value */
proto.google.logging.v2.DeleteLogRequest.prototype.setLogName = function (value) {
  jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.logging.v2.WriteLogEntriesRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.logging.v2.WriteLogEntriesRequest.repeatedFields_, null);
};
goog.inherits(proto.google.logging.v2.WriteLogEntriesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.logging.v2.WriteLogEntriesRequest.displayName = 'proto.google.logging.v2.WriteLogEntriesRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.logging.v2.WriteLogEntriesRequest.repeatedFields_ = [4];

if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
  proto.google.logging.v2.WriteLogEntriesRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.google.logging.v2.WriteLogEntriesRequest.toObject(opt_includeInstance, this);
  };

  /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.logging.v2.WriteLogEntriesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
  proto.google.logging.v2.WriteLogEntriesRequest.toObject = function (includeInstance, msg) {
    let f; const
      obj = {
        logName: jspb.Message.getFieldWithDefault(msg, 1, ''),
        resource: (f = msg.getResource()) && google_api_monitored_resource_pb.MonitoredResource.toObject(includeInstance, f),
        labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
        entriesList: jspb.Message.toObjectList(msg.getEntriesList(),
          google_logging_v2_log_entry_pb.LogEntry.toObject, includeInstance),
        partialSuccess: jspb.Message.getFieldWithDefault(msg, 5, false),
        dryRun: jspb.Message.getFieldWithDefault(msg, 6, false),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.logging.v2.WriteLogEntriesRequest}
 */
proto.google.logging.v2.WriteLogEntriesRequest.deserializeBinary = function (bytes) {
  const reader = new jspb.BinaryReader(bytes);
  const msg = new proto.google.logging.v2.WriteLogEntriesRequest();
  return proto.google.logging.v2.WriteLogEntriesRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.logging.v2.WriteLogEntriesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.logging.v2.WriteLogEntriesRequest}
 */
proto.google.logging.v2.WriteLogEntriesRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    const field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setLogName(value);
        break;
      case 2:
        var value = new google_api_monitored_resource_pb.MonitoredResource();
        reader.readMessage(value, google_api_monitored_resource_pb.MonitoredResource.deserializeBinaryFromReader);
        msg.setResource(value);
        break;
      case 3:
        var value = msg.getLabelsMap();
        reader.readMessage(value, (message, reader) => {
          jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, '');
        });
        break;
      case 4:
        var value = new google_logging_v2_log_entry_pb.LogEntry();
        reader.readMessage(value, google_logging_v2_log_entry_pb.LogEntry.deserializeBinaryFromReader);
        msg.addEntries(value);
        break;
      case 5:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setPartialSuccess(value);
        break;
      case 6:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setDryRun(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.logging.v2.WriteLogEntriesRequest.prototype.serializeBinary = function () {
  const writer = new jspb.BinaryWriter();
  proto.google.logging.v2.WriteLogEntriesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.logging.v2.WriteLogEntriesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.logging.v2.WriteLogEntriesRequest.serializeBinaryToWriter = function (message, writer) {
  let f;
  f = message.getLogName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f,
    );
  }
  f = message.getResource();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_api_monitored_resource_pb.MonitoredResource.serializeBinaryToWriter,
    );
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getEntriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      google_logging_v2_log_entry_pb.LogEntry.serializeBinaryToWriter,
    );
  }
  f = message.getPartialSuccess();
  if (f) {
    writer.writeBool(
      5,
      f,
    );
  }
  f = message.getDryRun();
  if (f) {
    writer.writeBool(
      6,
      f,
    );
  }
};

/**
 * optional string log_name = 1;
 * @return {string}
 */
proto.google.logging.v2.WriteLogEntriesRequest.prototype.getLogName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/** @param {string} value */
proto.google.logging.v2.WriteLogEntriesRequest.prototype.setLogName = function (value) {
  jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional google.api.MonitoredResource resource = 2;
 * @return {?proto.google.api.MonitoredResource}
 */
proto.google.logging.v2.WriteLogEntriesRequest.prototype.getResource = function () {
  return /** @type{?proto.google.api.MonitoredResource} */ (
    jspb.Message.getWrapperField(this, google_api_monitored_resource_pb.MonitoredResource, 2));
};

/** @param {?proto.google.api.MonitoredResource|undefined} value */
proto.google.logging.v2.WriteLogEntriesRequest.prototype.setResource = function (value) {
  jspb.Message.setWrapperField(this, 2, value);
};

proto.google.logging.v2.WriteLogEntriesRequest.prototype.clearResource = function () {
  this.setResource(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.google.logging.v2.WriteLogEntriesRequest.prototype.hasResource = function () {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * map<string, string> labels = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.google.logging.v2.WriteLogEntriesRequest.prototype.getLabelsMap = function (opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
    jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};

proto.google.logging.v2.WriteLogEntriesRequest.prototype.clearLabelsMap = function () {
  this.getLabelsMap().clear();
};

/**
 * repeated LogEntry entries = 4;
 * @return {!Array<!proto.google.logging.v2.LogEntry>}
 */
proto.google.logging.v2.WriteLogEntriesRequest.prototype.getEntriesList = function () {
  return /** @type{!Array<!proto.google.logging.v2.LogEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_logging_v2_log_entry_pb.LogEntry, 4));
};

/** @param {!Array<!proto.google.logging.v2.LogEntry>} value */
proto.google.logging.v2.WriteLogEntriesRequest.prototype.setEntriesList = function (value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};

/**
 * @param {!proto.google.logging.v2.LogEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.logging.v2.LogEntry}
 */
proto.google.logging.v2.WriteLogEntriesRequest.prototype.addEntries = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.google.logging.v2.LogEntry, opt_index);
};

proto.google.logging.v2.WriteLogEntriesRequest.prototype.clearEntriesList = function () {
  this.setEntriesList([]);
};

/**
 * optional bool partial_success = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.google.logging.v2.WriteLogEntriesRequest.prototype.getPartialSuccess = function () {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};

/** @param {boolean} value */
proto.google.logging.v2.WriteLogEntriesRequest.prototype.setPartialSuccess = function (value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};

/**
 * optional bool dry_run = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.google.logging.v2.WriteLogEntriesRequest.prototype.getDryRun = function () {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};

/** @param {boolean} value */
proto.google.logging.v2.WriteLogEntriesRequest.prototype.setDryRun = function (value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.logging.v2.WriteLogEntriesResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.logging.v2.WriteLogEntriesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.logging.v2.WriteLogEntriesResponse.displayName = 'proto.google.logging.v2.WriteLogEntriesResponse';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
  proto.google.logging.v2.WriteLogEntriesResponse.prototype.toObject = function (opt_includeInstance) {
    return proto.google.logging.v2.WriteLogEntriesResponse.toObject(opt_includeInstance, this);
  };

  /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.logging.v2.WriteLogEntriesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
  proto.google.logging.v2.WriteLogEntriesResponse.toObject = function (includeInstance, msg) {
    let f; const
      obj = {

      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.logging.v2.WriteLogEntriesResponse}
 */
proto.google.logging.v2.WriteLogEntriesResponse.deserializeBinary = function (bytes) {
  const reader = new jspb.BinaryReader(bytes);
  const msg = new proto.google.logging.v2.WriteLogEntriesResponse();
  return proto.google.logging.v2.WriteLogEntriesResponse.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.logging.v2.WriteLogEntriesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.logging.v2.WriteLogEntriesResponse}
 */
proto.google.logging.v2.WriteLogEntriesResponse.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    const field = reader.getFieldNumber();
    switch (field) {
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.logging.v2.WriteLogEntriesResponse.prototype.serializeBinary = function () {
  const writer = new jspb.BinaryWriter();
  proto.google.logging.v2.WriteLogEntriesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.logging.v2.WriteLogEntriesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.logging.v2.WriteLogEntriesResponse.serializeBinaryToWriter = function (message, writer) {
  const f;
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.logging.v2.WriteLogEntriesPartialErrors = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.logging.v2.WriteLogEntriesPartialErrors, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.logging.v2.WriteLogEntriesPartialErrors.displayName = 'proto.google.logging.v2.WriteLogEntriesPartialErrors';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
  proto.google.logging.v2.WriteLogEntriesPartialErrors.prototype.toObject = function (opt_includeInstance) {
    return proto.google.logging.v2.WriteLogEntriesPartialErrors.toObject(opt_includeInstance, this);
  };

  /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.logging.v2.WriteLogEntriesPartialErrors} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
  proto.google.logging.v2.WriteLogEntriesPartialErrors.toObject = function (includeInstance, msg) {
    let f; const
      obj = {
        logEntryErrorsMap: (f = msg.getLogEntryErrorsMap()) ? f.toObject(includeInstance, proto.google.rpc.Status.toObject) : [],
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.logging.v2.WriteLogEntriesPartialErrors}
 */
proto.google.logging.v2.WriteLogEntriesPartialErrors.deserializeBinary = function (bytes) {
  const reader = new jspb.BinaryReader(bytes);
  const msg = new proto.google.logging.v2.WriteLogEntriesPartialErrors();
  return proto.google.logging.v2.WriteLogEntriesPartialErrors.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.logging.v2.WriteLogEntriesPartialErrors} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.logging.v2.WriteLogEntriesPartialErrors}
 */
proto.google.logging.v2.WriteLogEntriesPartialErrors.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    const field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = msg.getLogEntryErrorsMap();
        reader.readMessage(value, (message, reader) => {
          jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readMessage, proto.google.rpc.Status.deserializeBinaryFromReader, 0);
        });
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.logging.v2.WriteLogEntriesPartialErrors.prototype.serializeBinary = function () {
  const writer = new jspb.BinaryWriter();
  proto.google.logging.v2.WriteLogEntriesPartialErrors.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.logging.v2.WriteLogEntriesPartialErrors} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.logging.v2.WriteLogEntriesPartialErrors.serializeBinaryToWriter = function (message, writer) {
  let f;
  f = message.getLogEntryErrorsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeMessage, proto.google.rpc.Status.serializeBinaryToWriter);
  }
};

/**
 * map<int32, google.rpc.Status> log_entry_errors = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.google.rpc.Status>}
 */
proto.google.logging.v2.WriteLogEntriesPartialErrors.prototype.getLogEntryErrorsMap = function (opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.google.rpc.Status>} */ (
    jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.google.rpc.Status));
};

proto.google.logging.v2.WriteLogEntriesPartialErrors.prototype.clearLogEntryErrorsMap = function () {
  this.getLogEntryErrorsMap().clear();
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.logging.v2.ListLogEntriesRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.logging.v2.ListLogEntriesRequest.repeatedFields_, null);
};
goog.inherits(proto.google.logging.v2.ListLogEntriesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.logging.v2.ListLogEntriesRequest.displayName = 'proto.google.logging.v2.ListLogEntriesRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.logging.v2.ListLogEntriesRequest.repeatedFields_ = [8];

if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
  proto.google.logging.v2.ListLogEntriesRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.google.logging.v2.ListLogEntriesRequest.toObject(opt_includeInstance, this);
  };

  /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.logging.v2.ListLogEntriesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
  proto.google.logging.v2.ListLogEntriesRequest.toObject = function (includeInstance, msg) {
    let f; const
      obj = {
        resourceNamesList: jspb.Message.getRepeatedField(msg, 8),
        filter: jspb.Message.getFieldWithDefault(msg, 2, ''),
        orderBy: jspb.Message.getFieldWithDefault(msg, 3, ''),
        pageSize: jspb.Message.getFieldWithDefault(msg, 4, 0),
        pageToken: jspb.Message.getFieldWithDefault(msg, 5, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.logging.v2.ListLogEntriesRequest}
 */
proto.google.logging.v2.ListLogEntriesRequest.deserializeBinary = function (bytes) {
  const reader = new jspb.BinaryReader(bytes);
  const msg = new proto.google.logging.v2.ListLogEntriesRequest();
  return proto.google.logging.v2.ListLogEntriesRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.logging.v2.ListLogEntriesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.logging.v2.ListLogEntriesRequest}
 */
proto.google.logging.v2.ListLogEntriesRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    const field = reader.getFieldNumber();
    switch (field) {
      case 8:
        var value = /** @type {string} */ (reader.readString());
        msg.addResourceNames(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setFilter(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setOrderBy(value);
        break;
      case 4:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setPageSize(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setPageToken(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.logging.v2.ListLogEntriesRequest.prototype.serializeBinary = function () {
  const writer = new jspb.BinaryWriter();
  proto.google.logging.v2.ListLogEntriesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.logging.v2.ListLogEntriesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.logging.v2.ListLogEntriesRequest.serializeBinaryToWriter = function (message, writer) {
  let f;
  f = message.getResourceNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f,
    );
  }
  f = message.getFilter();
  if (f.length > 0) {
    writer.writeString(
      2,
      f,
    );
  }
  f = message.getOrderBy();
  if (f.length > 0) {
    writer.writeString(
      3,
      f,
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f,
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      5,
      f,
    );
  }
};

/**
 * repeated string resource_names = 8;
 * @return {!Array<string>}
 */
proto.google.logging.v2.ListLogEntriesRequest.prototype.getResourceNamesList = function () {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};

/** @param {!Array<string>} value */
proto.google.logging.v2.ListLogEntriesRequest.prototype.setResourceNamesList = function (value) {
  jspb.Message.setField(this, 8, value || []);
};

/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.google.logging.v2.ListLogEntriesRequest.prototype.addResourceNames = function (value, opt_index) {
  jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};

proto.google.logging.v2.ListLogEntriesRequest.prototype.clearResourceNamesList = function () {
  this.setResourceNamesList([]);
};

/**
 * optional string filter = 2;
 * @return {string}
 */
proto.google.logging.v2.ListLogEntriesRequest.prototype.getFilter = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/** @param {string} value */
proto.google.logging.v2.ListLogEntriesRequest.prototype.setFilter = function (value) {
  jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string order_by = 3;
 * @return {string}
 */
proto.google.logging.v2.ListLogEntriesRequest.prototype.getOrderBy = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/** @param {string} value */
proto.google.logging.v2.ListLogEntriesRequest.prototype.setOrderBy = function (value) {
  jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional int32 page_size = 4;
 * @return {number}
 */
proto.google.logging.v2.ListLogEntriesRequest.prototype.getPageSize = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};

/** @param {number} value */
proto.google.logging.v2.ListLogEntriesRequest.prototype.setPageSize = function (value) {
  jspb.Message.setProto3IntField(this, 4, value);
};

/**
 * optional string page_token = 5;
 * @return {string}
 */
proto.google.logging.v2.ListLogEntriesRequest.prototype.getPageToken = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/** @param {string} value */
proto.google.logging.v2.ListLogEntriesRequest.prototype.setPageToken = function (value) {
  jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.logging.v2.ListLogEntriesResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.logging.v2.ListLogEntriesResponse.repeatedFields_, null);
};
goog.inherits(proto.google.logging.v2.ListLogEntriesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.logging.v2.ListLogEntriesResponse.displayName = 'proto.google.logging.v2.ListLogEntriesResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.logging.v2.ListLogEntriesResponse.repeatedFields_ = [1];

if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
  proto.google.logging.v2.ListLogEntriesResponse.prototype.toObject = function (opt_includeInstance) {
    return proto.google.logging.v2.ListLogEntriesResponse.toObject(opt_includeInstance, this);
  };

  /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.logging.v2.ListLogEntriesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
  proto.google.logging.v2.ListLogEntriesResponse.toObject = function (includeInstance, msg) {
    let f; const
      obj = {
        entriesList: jspb.Message.toObjectList(msg.getEntriesList(),
          google_logging_v2_log_entry_pb.LogEntry.toObject, includeInstance),
        nextPageToken: jspb.Message.getFieldWithDefault(msg, 2, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.logging.v2.ListLogEntriesResponse}
 */
proto.google.logging.v2.ListLogEntriesResponse.deserializeBinary = function (bytes) {
  const reader = new jspb.BinaryReader(bytes);
  const msg = new proto.google.logging.v2.ListLogEntriesResponse();
  return proto.google.logging.v2.ListLogEntriesResponse.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.logging.v2.ListLogEntriesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.logging.v2.ListLogEntriesResponse}
 */
proto.google.logging.v2.ListLogEntriesResponse.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    const field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new google_logging_v2_log_entry_pb.LogEntry();
        reader.readMessage(value, google_logging_v2_log_entry_pb.LogEntry.deserializeBinaryFromReader);
        msg.addEntries(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setNextPageToken(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.logging.v2.ListLogEntriesResponse.prototype.serializeBinary = function () {
  const writer = new jspb.BinaryWriter();
  proto.google.logging.v2.ListLogEntriesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.logging.v2.ListLogEntriesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.logging.v2.ListLogEntriesResponse.serializeBinaryToWriter = function (message, writer) {
  let f;
  f = message.getEntriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      google_logging_v2_log_entry_pb.LogEntry.serializeBinaryToWriter,
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f,
    );
  }
};

/**
 * repeated LogEntry entries = 1;
 * @return {!Array<!proto.google.logging.v2.LogEntry>}
 */
proto.google.logging.v2.ListLogEntriesResponse.prototype.getEntriesList = function () {
  return /** @type{!Array<!proto.google.logging.v2.LogEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_logging_v2_log_entry_pb.LogEntry, 1));
};

/** @param {!Array<!proto.google.logging.v2.LogEntry>} value */
proto.google.logging.v2.ListLogEntriesResponse.prototype.setEntriesList = function (value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};

/**
 * @param {!proto.google.logging.v2.LogEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.logging.v2.LogEntry}
 */
proto.google.logging.v2.ListLogEntriesResponse.prototype.addEntries = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.logging.v2.LogEntry, opt_index);
};

proto.google.logging.v2.ListLogEntriesResponse.prototype.clearEntriesList = function () {
  this.setEntriesList([]);
};

/**
 * optional string next_page_token = 2;
 * @return {string}
 */
proto.google.logging.v2.ListLogEntriesResponse.prototype.getNextPageToken = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/** @param {string} value */
proto.google.logging.v2.ListLogEntriesResponse.prototype.setNextPageToken = function (value) {
  jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.logging.v2.ListMonitoredResourceDescriptorsRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.logging.v2.ListMonitoredResourceDescriptorsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.logging.v2.ListMonitoredResourceDescriptorsRequest.displayName = 'proto.google.logging.v2.ListMonitoredResourceDescriptorsRequest';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
  proto.google.logging.v2.ListMonitoredResourceDescriptorsRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.google.logging.v2.ListMonitoredResourceDescriptorsRequest.toObject(opt_includeInstance, this);
  };

  /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.logging.v2.ListMonitoredResourceDescriptorsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
  proto.google.logging.v2.ListMonitoredResourceDescriptorsRequest.toObject = function (includeInstance, msg) {
    let f; const
      obj = {
        pageSize: jspb.Message.getFieldWithDefault(msg, 1, 0),
        pageToken: jspb.Message.getFieldWithDefault(msg, 2, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.logging.v2.ListMonitoredResourceDescriptorsRequest}
 */
proto.google.logging.v2.ListMonitoredResourceDescriptorsRequest.deserializeBinary = function (bytes) {
  const reader = new jspb.BinaryReader(bytes);
  const msg = new proto.google.logging.v2.ListMonitoredResourceDescriptorsRequest();
  return proto.google.logging.v2.ListMonitoredResourceDescriptorsRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.logging.v2.ListMonitoredResourceDescriptorsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.logging.v2.ListMonitoredResourceDescriptorsRequest}
 */
proto.google.logging.v2.ListMonitoredResourceDescriptorsRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    const field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setPageSize(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setPageToken(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.logging.v2.ListMonitoredResourceDescriptorsRequest.prototype.serializeBinary = function () {
  const writer = new jspb.BinaryWriter();
  proto.google.logging.v2.ListMonitoredResourceDescriptorsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.logging.v2.ListMonitoredResourceDescriptorsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.logging.v2.ListMonitoredResourceDescriptorsRequest.serializeBinaryToWriter = function (message, writer) {
  let f;
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f,
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f,
    );
  }
};

/**
 * optional int32 page_size = 1;
 * @return {number}
 */
proto.google.logging.v2.ListMonitoredResourceDescriptorsRequest.prototype.getPageSize = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/** @param {number} value */
proto.google.logging.v2.ListMonitoredResourceDescriptorsRequest.prototype.setPageSize = function (value) {
  jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional string page_token = 2;
 * @return {string}
 */
proto.google.logging.v2.ListMonitoredResourceDescriptorsRequest.prototype.getPageToken = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/** @param {string} value */
proto.google.logging.v2.ListMonitoredResourceDescriptorsRequest.prototype.setPageToken = function (value) {
  jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.logging.v2.ListMonitoredResourceDescriptorsResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.logging.v2.ListMonitoredResourceDescriptorsResponse.repeatedFields_, null);
};
goog.inherits(proto.google.logging.v2.ListMonitoredResourceDescriptorsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.logging.v2.ListMonitoredResourceDescriptorsResponse.displayName = 'proto.google.logging.v2.ListMonitoredResourceDescriptorsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.logging.v2.ListMonitoredResourceDescriptorsResponse.repeatedFields_ = [1];

if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
  proto.google.logging.v2.ListMonitoredResourceDescriptorsResponse.prototype.toObject = function (opt_includeInstance) {
    return proto.google.logging.v2.ListMonitoredResourceDescriptorsResponse.toObject(opt_includeInstance, this);
  };

  /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.logging.v2.ListMonitoredResourceDescriptorsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
  proto.google.logging.v2.ListMonitoredResourceDescriptorsResponse.toObject = function (includeInstance, msg) {
    let f; const
      obj = {
        resourceDescriptorsList: jspb.Message.toObjectList(msg.getResourceDescriptorsList(),
          google_api_monitored_resource_pb.MonitoredResourceDescriptor.toObject, includeInstance),
        nextPageToken: jspb.Message.getFieldWithDefault(msg, 2, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.logging.v2.ListMonitoredResourceDescriptorsResponse}
 */
proto.google.logging.v2.ListMonitoredResourceDescriptorsResponse.deserializeBinary = function (bytes) {
  const reader = new jspb.BinaryReader(bytes);
  const msg = new proto.google.logging.v2.ListMonitoredResourceDescriptorsResponse();
  return proto.google.logging.v2.ListMonitoredResourceDescriptorsResponse.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.logging.v2.ListMonitoredResourceDescriptorsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.logging.v2.ListMonitoredResourceDescriptorsResponse}
 */
proto.google.logging.v2.ListMonitoredResourceDescriptorsResponse.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    const field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new google_api_monitored_resource_pb.MonitoredResourceDescriptor();
        reader.readMessage(value, google_api_monitored_resource_pb.MonitoredResourceDescriptor.deserializeBinaryFromReader);
        msg.addResourceDescriptors(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setNextPageToken(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.logging.v2.ListMonitoredResourceDescriptorsResponse.prototype.serializeBinary = function () {
  const writer = new jspb.BinaryWriter();
  proto.google.logging.v2.ListMonitoredResourceDescriptorsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.logging.v2.ListMonitoredResourceDescriptorsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.logging.v2.ListMonitoredResourceDescriptorsResponse.serializeBinaryToWriter = function (message, writer) {
  let f;
  f = message.getResourceDescriptorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      google_api_monitored_resource_pb.MonitoredResourceDescriptor.serializeBinaryToWriter,
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f,
    );
  }
};

/**
 * repeated google.api.MonitoredResourceDescriptor resource_descriptors = 1;
 * @return {!Array<!proto.google.api.MonitoredResourceDescriptor>}
 */
proto.google.logging.v2.ListMonitoredResourceDescriptorsResponse.prototype.getResourceDescriptorsList = function () {
  return /** @type{!Array<!proto.google.api.MonitoredResourceDescriptor>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_api_monitored_resource_pb.MonitoredResourceDescriptor, 1));
};

/** @param {!Array<!proto.google.api.MonitoredResourceDescriptor>} value */
proto.google.logging.v2.ListMonitoredResourceDescriptorsResponse.prototype.setResourceDescriptorsList = function (value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};

/**
 * @param {!proto.google.api.MonitoredResourceDescriptor=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.api.MonitoredResourceDescriptor}
 */
proto.google.logging.v2.ListMonitoredResourceDescriptorsResponse.prototype.addResourceDescriptors = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.api.MonitoredResourceDescriptor, opt_index);
};

proto.google.logging.v2.ListMonitoredResourceDescriptorsResponse.prototype.clearResourceDescriptorsList = function () {
  this.setResourceDescriptorsList([]);
};

/**
 * optional string next_page_token = 2;
 * @return {string}
 */
proto.google.logging.v2.ListMonitoredResourceDescriptorsResponse.prototype.getNextPageToken = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/** @param {string} value */
proto.google.logging.v2.ListMonitoredResourceDescriptorsResponse.prototype.setNextPageToken = function (value) {
  jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.logging.v2.ListLogsRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.logging.v2.ListLogsRequest.repeatedFields_, null);
};
goog.inherits(proto.google.logging.v2.ListLogsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.logging.v2.ListLogsRequest.displayName = 'proto.google.logging.v2.ListLogsRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.logging.v2.ListLogsRequest.repeatedFields_ = [8];

if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
  proto.google.logging.v2.ListLogsRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.google.logging.v2.ListLogsRequest.toObject(opt_includeInstance, this);
  };

  /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.logging.v2.ListLogsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
  proto.google.logging.v2.ListLogsRequest.toObject = function (includeInstance, msg) {
    let f; const
      obj = {
        parent: jspb.Message.getFieldWithDefault(msg, 1, ''),
        pageSize: jspb.Message.getFieldWithDefault(msg, 2, 0),
        pageToken: jspb.Message.getFieldWithDefault(msg, 3, ''),
        resourceNamesList: jspb.Message.getRepeatedField(msg, 8),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.logging.v2.ListLogsRequest}
 */
proto.google.logging.v2.ListLogsRequest.deserializeBinary = function (bytes) {
  const reader = new jspb.BinaryReader(bytes);
  const msg = new proto.google.logging.v2.ListLogsRequest();
  return proto.google.logging.v2.ListLogsRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.logging.v2.ListLogsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.logging.v2.ListLogsRequest}
 */
proto.google.logging.v2.ListLogsRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    const field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setParent(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setPageSize(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setPageToken(value);
        break;
      case 8:
        var value = /** @type {string} */ (reader.readString());
        msg.addResourceNames(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.logging.v2.ListLogsRequest.prototype.serializeBinary = function () {
  const writer = new jspb.BinaryWriter();
  proto.google.logging.v2.ListLogsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.logging.v2.ListLogsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.logging.v2.ListLogsRequest.serializeBinaryToWriter = function (message, writer) {
  let f;
  f = message.getParent();
  if (f.length > 0) {
    writer.writeString(
      1,
      f,
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f,
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f,
    );
  }
  f = message.getResourceNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f,
    );
  }
};

/**
 * optional string parent = 1;
 * @return {string}
 */
proto.google.logging.v2.ListLogsRequest.prototype.getParent = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/** @param {string} value */
proto.google.logging.v2.ListLogsRequest.prototype.setParent = function (value) {
  jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional int32 page_size = 2;
 * @return {number}
 */
proto.google.logging.v2.ListLogsRequest.prototype.getPageSize = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/** @param {number} value */
proto.google.logging.v2.ListLogsRequest.prototype.setPageSize = function (value) {
  jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * optional string page_token = 3;
 * @return {string}
 */
proto.google.logging.v2.ListLogsRequest.prototype.getPageToken = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/** @param {string} value */
proto.google.logging.v2.ListLogsRequest.prototype.setPageToken = function (value) {
  jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * repeated string resource_names = 8;
 * @return {!Array<string>}
 */
proto.google.logging.v2.ListLogsRequest.prototype.getResourceNamesList = function () {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};

/** @param {!Array<string>} value */
proto.google.logging.v2.ListLogsRequest.prototype.setResourceNamesList = function (value) {
  jspb.Message.setField(this, 8, value || []);
};

/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.google.logging.v2.ListLogsRequest.prototype.addResourceNames = function (value, opt_index) {
  jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};

proto.google.logging.v2.ListLogsRequest.prototype.clearResourceNamesList = function () {
  this.setResourceNamesList([]);
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.logging.v2.ListLogsResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.logging.v2.ListLogsResponse.repeatedFields_, null);
};
goog.inherits(proto.google.logging.v2.ListLogsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.logging.v2.ListLogsResponse.displayName = 'proto.google.logging.v2.ListLogsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.logging.v2.ListLogsResponse.repeatedFields_ = [3];

if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
  proto.google.logging.v2.ListLogsResponse.prototype.toObject = function (opt_includeInstance) {
    return proto.google.logging.v2.ListLogsResponse.toObject(opt_includeInstance, this);
  };

  /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.logging.v2.ListLogsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
  proto.google.logging.v2.ListLogsResponse.toObject = function (includeInstance, msg) {
    let f; const
      obj = {
        logNamesList: jspb.Message.getRepeatedField(msg, 3),
        nextPageToken: jspb.Message.getFieldWithDefault(msg, 2, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.logging.v2.ListLogsResponse}
 */
proto.google.logging.v2.ListLogsResponse.deserializeBinary = function (bytes) {
  const reader = new jspb.BinaryReader(bytes);
  const msg = new proto.google.logging.v2.ListLogsResponse();
  return proto.google.logging.v2.ListLogsResponse.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.logging.v2.ListLogsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.logging.v2.ListLogsResponse}
 */
proto.google.logging.v2.ListLogsResponse.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    const field = reader.getFieldNumber();
    switch (field) {
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.addLogNames(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setNextPageToken(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.logging.v2.ListLogsResponse.prototype.serializeBinary = function () {
  const writer = new jspb.BinaryWriter();
  proto.google.logging.v2.ListLogsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.logging.v2.ListLogsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.logging.v2.ListLogsResponse.serializeBinaryToWriter = function (message, writer) {
  let f;
  f = message.getLogNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f,
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f,
    );
  }
};

/**
 * repeated string log_names = 3;
 * @return {!Array<string>}
 */
proto.google.logging.v2.ListLogsResponse.prototype.getLogNamesList = function () {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};

/** @param {!Array<string>} value */
proto.google.logging.v2.ListLogsResponse.prototype.setLogNamesList = function (value) {
  jspb.Message.setField(this, 3, value || []);
};

/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.google.logging.v2.ListLogsResponse.prototype.addLogNames = function (value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};

proto.google.logging.v2.ListLogsResponse.prototype.clearLogNamesList = function () {
  this.setLogNamesList([]);
};

/**
 * optional string next_page_token = 2;
 * @return {string}
 */
proto.google.logging.v2.ListLogsResponse.prototype.getNextPageToken = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/** @param {string} value */
proto.google.logging.v2.ListLogsResponse.prototype.setNextPageToken = function (value) {
  jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.logging.v2.TailLogEntriesRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.logging.v2.TailLogEntriesRequest.repeatedFields_, null);
};
goog.inherits(proto.google.logging.v2.TailLogEntriesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.logging.v2.TailLogEntriesRequest.displayName = 'proto.google.logging.v2.TailLogEntriesRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.logging.v2.TailLogEntriesRequest.repeatedFields_ = [1];

if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
  proto.google.logging.v2.TailLogEntriesRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.google.logging.v2.TailLogEntriesRequest.toObject(opt_includeInstance, this);
  };

  /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.logging.v2.TailLogEntriesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
  proto.google.logging.v2.TailLogEntriesRequest.toObject = function (includeInstance, msg) {
    let f; const
      obj = {
        resourceNamesList: jspb.Message.getRepeatedField(msg, 1),
        filter: jspb.Message.getFieldWithDefault(msg, 2, ''),
        bufferWindow: (f = msg.getBufferWindow()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.logging.v2.TailLogEntriesRequest}
 */
proto.google.logging.v2.TailLogEntriesRequest.deserializeBinary = function (bytes) {
  const reader = new jspb.BinaryReader(bytes);
  const msg = new proto.google.logging.v2.TailLogEntriesRequest();
  return proto.google.logging.v2.TailLogEntriesRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.logging.v2.TailLogEntriesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.logging.v2.TailLogEntriesRequest}
 */
proto.google.logging.v2.TailLogEntriesRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    const field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.addResourceNames(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setFilter(value);
        break;
      case 3:
        var value = new google_protobuf_duration_pb.Duration();
        reader.readMessage(value, google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
        msg.setBufferWindow(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.logging.v2.TailLogEntriesRequest.prototype.serializeBinary = function () {
  const writer = new jspb.BinaryWriter();
  proto.google.logging.v2.TailLogEntriesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.logging.v2.TailLogEntriesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.logging.v2.TailLogEntriesRequest.serializeBinaryToWriter = function (message, writer) {
  let f;
  f = message.getResourceNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f,
    );
  }
  f = message.getFilter();
  if (f.length > 0) {
    writer.writeString(
      2,
      f,
    );
  }
  f = message.getBufferWindow();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter,
    );
  }
};

/**
 * repeated string resource_names = 1;
 * @return {!Array<string>}
 */
proto.google.logging.v2.TailLogEntriesRequest.prototype.getResourceNamesList = function () {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};

/** @param {!Array<string>} value */
proto.google.logging.v2.TailLogEntriesRequest.prototype.setResourceNamesList = function (value) {
  jspb.Message.setField(this, 1, value || []);
};

/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.google.logging.v2.TailLogEntriesRequest.prototype.addResourceNames = function (value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};

proto.google.logging.v2.TailLogEntriesRequest.prototype.clearResourceNamesList = function () {
  this.setResourceNamesList([]);
};

/**
 * optional string filter = 2;
 * @return {string}
 */
proto.google.logging.v2.TailLogEntriesRequest.prototype.getFilter = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/** @param {string} value */
proto.google.logging.v2.TailLogEntriesRequest.prototype.setFilter = function (value) {
  jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional google.protobuf.Duration buffer_window = 3;
 * @return {?proto.google.protobuf.Duration}
 */
proto.google.logging.v2.TailLogEntriesRequest.prototype.getBufferWindow = function () {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 3));
};

/** @param {?proto.google.protobuf.Duration|undefined} value */
proto.google.logging.v2.TailLogEntriesRequest.prototype.setBufferWindow = function (value) {
  jspb.Message.setWrapperField(this, 3, value);
};

proto.google.logging.v2.TailLogEntriesRequest.prototype.clearBufferWindow = function () {
  this.setBufferWindow(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.google.logging.v2.TailLogEntriesRequest.prototype.hasBufferWindow = function () {
  return jspb.Message.getField(this, 3) != null;
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.logging.v2.TailLogEntriesResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.logging.v2.TailLogEntriesResponse.repeatedFields_, null);
};
goog.inherits(proto.google.logging.v2.TailLogEntriesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.logging.v2.TailLogEntriesResponse.displayName = 'proto.google.logging.v2.TailLogEntriesResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.logging.v2.TailLogEntriesResponse.repeatedFields_ = [1, 2];

if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
  proto.google.logging.v2.TailLogEntriesResponse.prototype.toObject = function (opt_includeInstance) {
    return proto.google.logging.v2.TailLogEntriesResponse.toObject(opt_includeInstance, this);
  };

  /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.logging.v2.TailLogEntriesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
  proto.google.logging.v2.TailLogEntriesResponse.toObject = function (includeInstance, msg) {
    let f; const
      obj = {
        entriesList: jspb.Message.toObjectList(msg.getEntriesList(),
          google_logging_v2_log_entry_pb.LogEntry.toObject, includeInstance),
        suppressionInfoList: jspb.Message.toObjectList(msg.getSuppressionInfoList(),
          proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo.toObject, includeInstance),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.logging.v2.TailLogEntriesResponse}
 */
proto.google.logging.v2.TailLogEntriesResponse.deserializeBinary = function (bytes) {
  const reader = new jspb.BinaryReader(bytes);
  const msg = new proto.google.logging.v2.TailLogEntriesResponse();
  return proto.google.logging.v2.TailLogEntriesResponse.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.logging.v2.TailLogEntriesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.logging.v2.TailLogEntriesResponse}
 */
proto.google.logging.v2.TailLogEntriesResponse.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    const field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new google_logging_v2_log_entry_pb.LogEntry();
        reader.readMessage(value, google_logging_v2_log_entry_pb.LogEntry.deserializeBinaryFromReader);
        msg.addEntries(value);
        break;
      case 2:
        var value = new proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo();
        reader.readMessage(value, proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo.deserializeBinaryFromReader);
        msg.addSuppressionInfo(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.logging.v2.TailLogEntriesResponse.prototype.serializeBinary = function () {
  const writer = new jspb.BinaryWriter();
  proto.google.logging.v2.TailLogEntriesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.logging.v2.TailLogEntriesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.logging.v2.TailLogEntriesResponse.serializeBinaryToWriter = function (message, writer) {
  let f;
  f = message.getEntriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      google_logging_v2_log_entry_pb.LogEntry.serializeBinaryToWriter,
    );
  }
  f = message.getSuppressionInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo.serializeBinaryToWriter,
    );
  }
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo.displayName = 'proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
  proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo.prototype.toObject = function (opt_includeInstance) {
    return proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo.toObject(opt_includeInstance, this);
  };

  /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
  proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo.toObject = function (includeInstance, msg) {
    let f; const
      obj = {
        reason: jspb.Message.getFieldWithDefault(msg, 1, 0),
        suppressedCount: jspb.Message.getFieldWithDefault(msg, 2, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo}
 */
proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo.deserializeBinary = function (bytes) {
  const reader = new jspb.BinaryReader(bytes);
  const msg = new proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo();
  return proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo}
 */
proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    const field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {!proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo.Reason} */ (reader.readEnum());
        msg.setReason(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setSuppressedCount(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo.prototype.serializeBinary = function () {
  const writer = new jspb.BinaryWriter();
  proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo.serializeBinaryToWriter = function (message, writer) {
  let f;
  f = message.getReason();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f,
    );
  }
  f = message.getSuppressedCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f,
    );
  }
};

/**
 * @enum {number}
 */
proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo.Reason = {
  REASON_UNSPECIFIED: 0,
  RATE_LIMIT: 1,
  NOT_CONSUMED: 2,
};

/**
 * optional Reason reason = 1;
 * @return {!proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo.Reason}
 */
proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo.prototype.getReason = function () {
  return /** @type {!proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo.Reason} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/** @param {!proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo.Reason} value */
proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo.prototype.setReason = function (value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};

/**
 * optional int32 suppressed_count = 2;
 * @return {number}
 */
proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo.prototype.getSuppressedCount = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/** @param {number} value */
proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo.prototype.setSuppressedCount = function (value) {
  jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * repeated LogEntry entries = 1;
 * @return {!Array<!proto.google.logging.v2.LogEntry>}
 */
proto.google.logging.v2.TailLogEntriesResponse.prototype.getEntriesList = function () {
  return /** @type{!Array<!proto.google.logging.v2.LogEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_logging_v2_log_entry_pb.LogEntry, 1));
};

/** @param {!Array<!proto.google.logging.v2.LogEntry>} value */
proto.google.logging.v2.TailLogEntriesResponse.prototype.setEntriesList = function (value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};

/**
 * @param {!proto.google.logging.v2.LogEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.logging.v2.LogEntry}
 */
proto.google.logging.v2.TailLogEntriesResponse.prototype.addEntries = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.logging.v2.LogEntry, opt_index);
};

proto.google.logging.v2.TailLogEntriesResponse.prototype.clearEntriesList = function () {
  this.setEntriesList([]);
};

/**
 * repeated SuppressionInfo suppression_info = 2;
 * @return {!Array<!proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo>}
 */
proto.google.logging.v2.TailLogEntriesResponse.prototype.getSuppressionInfoList = function () {
  return /** @type{!Array<!proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo, 2));
};

/** @param {!Array<!proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo>} value */
proto.google.logging.v2.TailLogEntriesResponse.prototype.setSuppressionInfoList = function (value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};

/**
 * @param {!proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo}
 */
proto.google.logging.v2.TailLogEntriesResponse.prototype.addSuppressionInfo = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.logging.v2.TailLogEntriesResponse.SuppressionInfo, opt_index);
};

proto.google.logging.v2.TailLogEntriesResponse.prototype.clearSuppressionInfoList = function () {
  this.setSuppressionInfoList([]);
};

goog.object.extend(exports, proto.google.logging.v2);
